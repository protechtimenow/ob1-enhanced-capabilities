#!/bin/bash
# OB-1 + GitHub Copilot Bridge MCP Quick Installer
# Quantum-enhanced blockchain development setup

set -e

echo "🚀 OB-1 + GitHub Copilot Bridge MCP Installer"
echo "============================================"
echo "⚡ Setting up quantum blockchain development environment..."

# Check prerequisites
echo "🔍 Checking prerequisites..."

if ! command -v python3 &> /dev/null; then
    echo "❌ Python 3 is required. Please install Python 3.8+"
    exit 1
fi

if ! command -v pip3 &> /dev/null; then
    echo "❌ pip3 is required. Please install pip3"
    exit 1
fi

if ! command -v git &> /dev/null; then
    echo "❌ git is required. Please install git"
    exit 1
fi

echo "✅ Prerequisites check passed!"

# Clone repository if not exists
if [ ! -d "ob1-enhanced-capabilities" ]; then
    echo "📦 Cloning OB-1 Enhanced Capabilities..."
    git clone https://github.com/protechtimenow/ob1-enhanced-capabilities.git
fi

cd ob1-enhanced-capabilities/ob1_copilot_bridge_mcp

# Install Python dependencies
echo "📚 Installing Python dependencies..."
cat > requirements.txt << EOF
aiohttp>=3.8.0
asyncio-mqtt>=0.11.1
sqlite3-utils>=3.34.0
requests>=2.28.0
websockets>=10.4
click>=8.1.0
python-dotenv>=0.19.2
EOF

pip3 install -r requirements.txt

# Setup environment variables
echo "🔧 Setting up environment configuration..."
cat > .env << EOF
# OB-1 + Copilot Bridge MCP Configuration
# Generated by installer on $(date)

# API Keys (Replace with your actual keys)
OB1_API_KEY=your_ob1_api_key_here
GITHUB_TOKEN=your_github_token_here
COPILOT_API_KEY=your_copilot_api_key_here
ALCHEMY_API_KEY=your_alchemy_api_key_here

# SuperStacks Configuration
WALLET_ADDRESS=0x21cC30462B8392Aa250453704019800092a16165
TARGET_CAMPAIGN_END=2025-06-30
TARGET_POINTS=406000000
COMPETITIVE_ADVANTAGE=6.4

# Performance Settings
CACHE_TTL=3600
RATE_LIMIT=100
BATCH_SIZE=50

# Security Settings
ENABLE_ENCRYPTION=true
AUDIT_LOGGING=true
API_KEY_ROTATION=true
EOF

# Create MCP configuration
echo "⚙️ Setting up MCP configuration..."
mkdir -p ~/.config/mcp
cat > ~/.config/mcp/config.json << EOF
{
  "mcpServers": {
    "ob1-copilot-bridge": {
      "command": "python3",
      "args": ["$(pwd)/ob1_copilot_bridge.py"],
      "env": {
        "OB1_API_KEY": "\${OB1_API_KEY}",
        "GITHUB_TOKEN": "\${GITHUB_TOKEN}", 
        "COPILOT_API_KEY": "\${COPILOT_API_KEY}",
        "WALLET_ADDRESS": "\${WALLET_ADDRESS}"
      },
      "timeout": 60000,
      "restart": true
    }
  }
}
EOF

# Create test script
echo "🧪 Creating test environment..."
cat > test_installation.py << 'TEST_SCRIPT'
#!/usr/bin/env python3
import asyncio
import sys
import os
from pathlib import Path

# Add current directory to Python path
sys.path.insert(0, str(Path(__file__).parent))

try:
    from ob1_copilot_bridge import call_tool, list_tools
except ImportError as e:
    print(f"❌ Import error: {e}")
    print("🔧 Please ensure all dependencies are installed")
    sys.exit(1)

async def test_installation():
    print("🧪 Testing OB-1 + Copilot Bridge MCP installation...")
    
    try:
        # Test tool listing
        tools = await list_tools()
        print(f"✅ Found {len(tools['tools'])} available tools")
        
        # Test SuperStacks analytics
        print("📊 Testing SuperStacks analytics...")
        analytics = await call_tool("get_superstack_analytics", {
            "wallet_address": "0x21cC30462B8392Aa250453704019800092a16165"
        })
        
        print(f"✅ SuperStacks test passed:")
        print(f"   • Total Points: {analytics['total_points']:,.0f}")
        print(f"   • Current Rank: #{analytics['rank']}")
        print(f"   • Ecosystem Share: {analytics['ecosystem_share_percent']}%")
        print(f"   • Competitive Advantage: {analytics['competitive_analysis']['advantage_multiplier']}x")
        
        # Test Copilot enhancement
        print("🤖 Testing Copilot enhancement...")
        enhanced = await call_tool("enhance_copilot_context", {
            "code_context": "// Building DeFi protocol",
            "blockchain_context": {
                "protocol": "Uniswap V4",
                "chain": "Unichain",
                "focus": "SuperStacks optimization"
            }
        })
        
        print("✅ Copilot enhancement test passed")
        
        return True
        
    except Exception as e:
        print(f"❌ Test failed: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_installation())
    if success:
        print("\n🎉 Installation test completed successfully!")
        print("🚀 Your OB-1 + Copilot Bridge MCP is ready!")
    else:
        print("\n❌ Installation test failed. Please check setup.")
        sys.exit(1)
TEST_SCRIPT

chmod +x test_installation.py

# Create VSCode settings
echo "📝 Setting up VSCode integration..."
mkdir -p .vscode
cat > .vscode/settings.json << EOF
{
  "mcp.servers": {
    "ob1-copilot-bridge": {
      "command": "python3",
      "args": ["./ob1_copilot_bridge.py"],
      "env": {
        "OB1_API_KEY": "\${env:OB1_API_KEY}",
        "GITHUB_TOKEN": "\${env:GITHUB_TOKEN}",
        "COPILOT_API_KEY": "\${env:COPILOT_API_KEY}"
      }
    }
  },
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "solidity": true,
    "python": true,
    "javascript": true,
    "typescript": true
  },
  "github.copilot.advanced": {
    "debug.overrideEngine": "ob1-enhanced",
    "authProvider": "github-enterprise"
  }
}
EOF

# Create launcher script
echo "🎮 Creating launcher script..."
cat > start_ob1_mcp.sh << 'LAUNCHER'
#!/bin/bash
# OB-1 + Copilot Bridge MCP Launcher
# Start the quantum-enhanced development environment

set -e

# Load environment variables
if [ -f ".env" ]; then
    export $(cat .env | xargs)
fi

echo "🚀 Starting OB-1 + Copilot Bridge MCP..."
echo "📊 SuperStacks Target: 406M+ points by June 30, 2025"
echo "🎯 Current Position: Top 5 with 242.66M points"
echo "⚡ Competitive Advantage: 6.4x over alternatives"
echo ""

# Check if running in codespace
if [ -n "$CODESPACES" ]; then
    echo "☁️ GitHub Codespace detected - optimizing for cloud development"
    export CODESPACE_MODE=true
fi

# Start the MCP server
python3 ob1_copilot_bridge.py &
MCP_PID=$!

echo "✅ OB-1 + Copilot Bridge MCP started (PID: $MCP_PID)"
echo "🔗 MCP Server: Running on localhost"
echo "📊 Analytics Dashboard: http://localhost:8000/dashboard"
echo "🤖 GitHub Copilot: Enhanced with OB-1 intelligence"
echo ""
echo "🏆 Your quantum advantage is now active!"
echo "💡 Use 'Ctrl+C' to stop the server"

# Keep running and handle shutdown
trap "echo '🛑 Shutting down OB-1 MCP...'; kill $MCP_PID; exit 0" INT TERM
wait $MCP_PID
LAUNCHER

chmod +x start_ob1_mcp.sh

echo ""
echo "🎉 Installation completed successfully!"
echo "============================================"
echo "📂 Installation directory: $(pwd)"
echo "⚙️ MCP Config: ~/.config/mcp/config.json"
echo "📝 VSCode Settings: .vscode/settings.json"
echo "🔧 Environment: .env (update with your API keys)"
echo ""
echo "🚀 Next steps:"
echo "1. Edit .env file with your actual API keys"
echo "2. Run: ./test_installation.py"
echo "3. Start MCP: ./start_ob1_mcp.sh"
echo "4. Open VSCode and enable GitHub Copilot"
echo ""
echo "📊 Your SuperStacks position:"
echo "   • Current Points: 242.66M (Top 5)"
echo "   • Target: 406M+ by June 30, 2025"
echo "   • Advantage: 6.4x over competitors"
echo ""
echo "⚡ Your quantum blockchain development environment is ready!"
echo "🌟 Happy coding with OB-1 + GitHub Copilot!"